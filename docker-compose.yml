version: '3'

services:


  consul-server-1:
    # Uses only image and networks from 'consul-agent-1'
    # while 'command' is overwritten
    image: consul:latest
    container_name: consul-server-1
    networks:
      - ded-net
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0"

  consul-server-2:
    # Complete copy of 'consul-server-1'
    image: consul:latest
    container_name: consul-server-2
    networks:
      - ded-net
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0"

  consul-server-bootstrap:
    # Uses only image and networks from 'consul-agent-1'
    # while 'command' is overwritten and 'ports' are defined
    image: consul:latest
    container_name: consul-server-3
    networks:
      - ded-net
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    command: "agent -server -bootstrap-expect 1 -ui -client 0.0.0.0"

  gateway-service:
    container_name: gateway
    build:
      context: generic-java-docker/
      dockerfile: Dockerfile
    expose:
      - "8080"
    ports:
      - "8080:8080"
    volumes:
      - ./gateway-service/target/:/app/
    networks:
      - ded-net
    environment:
      - SPRING_CLOUD_CONSUL_HOST=localhost
      - SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME=gateway
      - SPRING_CLOUD_CONSUL_DISCOVERY_INSTANCE_ID=gateway
      - SPRING_CLOUD_CONSUL_DISCOVERY_SERVICENAME=gateway-service

  caller-service-1:
    container_name: caller-1
    build:
      context: generic-java-docker/
      dockerfile: Dockerfile
    volumes:
      - ./caller-service/target/:/app/
    networks:
      - ded-net
    expose:
      - "8091"
    ports:
      - "8091:8091"
    environment:
      - SPRING_CLOUD_CONSUL_HOST=localhost
      - SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME=caller-1
      - SPRING_CLOUD_CONSUL_DISCOVERY_INSTANCE_ID=caller-1
      - SPRING_CLOUD_CONSUL_DISCOVERY_SERVICENAME=caller-service
      - SERVER_PORT=8091

  caller-service-2:
    container_name: caller-2
    build:
      context: generic-java-docker/
      dockerfile: Dockerfile
    volumes:
      - ./caller-service/target/:/app/
    expose:
      - "8092"
    ports:
      - "8092:8092"
    networks:
      - ded-net
    environment:
      - SPRING_CLOUD_CONSUL_HOST=localhost
      - SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME=caller-2
      - SPRING_CLOUD_CONSUL_DISCOVERY_INSTANCE_ID=caller-2
      - SPRING_CLOUD_CONSUL_DISCOVERY_SERVICENAME=caller-service
      - SERVER_PORT=8092

  callme-service-1:
    container_name: callme-1
    build:
      context: generic-java-docker/
      dockerfile: Dockerfile
    volumes:
      - ./callme-service/target/:/app/
    networks:
      - ded-net
    environment:
      - SPRING_CLOUD_CONSUL_HOST=localhost
      - SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME=callme-1
      - SPRING_CLOUD_CONSUL_DISCOVERY_INSTANCE_ID=callme-1
      - SPRING_CLOUD_CONSUL_DISCOVERY_SERVICENAME=callme-service
      - SERVER_PORT=0

  callme-service2:
    container_name: callme-2
    build:
      context: generic-java-docker/
      dockerfile: Dockerfile
    volumes:
      - ./callme-service/target/:/app/
    networks:
      - ded-net
    environment:
      - SPRING_CLOUD_CONSUL_HOST=localhost
      - SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME=callme-2
      - SPRING_CLOUD_CONSUL_DISCOVERY_INSTANCE_ID=callme-2
      - SPRING_CLOUD_CONSUL_DISCOVERY_SERVICENAME=callme-service
      - SERVER_PORT=0

  consul-config-uploader:
    container_name: consul-config-uploader
    build:
      context: gateway-config/
      dockerfile: Dockerfile
    networks:
      - ded-net

networks:
  ded-net:
    external:
      name: dedicated-network